plugins {
    id 'maven-publish'
    id 'signing'
}

def internalRepo = layout.buildDirectory.dir('repos/internal')

publishing {
    publications.register('mavenJava', MavenPublication) {
        pom {
            url = 'https://github.com/halo-dev/halo'
            licenses {
                license {
                    name = 'The GNU General Public License v3.0'
                    url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                }
            }
            developers {
                developer {
                    id = 'johnniang'
                    name = 'JohnNiang'
                    email = 'johnniang@foxmail.com'
                }
            }
            scm {
                connection = 'scm:git:https://github.com/halo-dev/halo.git'
                developerConnection = 'scm:git:ssh://git@github.com:halo-dev/halo.git'
                url = 'https://github.com/halo-dev/halo'
            }
        }
    }

    repositories {
        maven {
            name = 'internal'
            url = internalRepo
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.register('createBundle', Zip) {
    group = PublishingPlugin.PUBLISH_TASK_GROUP
    dependsOn tasks.named('publishAllPublicationsToInternalRepository')
    from(internalRepo)
    archiveBaseName = "${project.group}.${project.name}"
}

tasks.register('uploadBundle', UploadBundleTask) {
    group = PublishingPlugin.PUBLISH_TASK_GROUP
    credentials = providers.credentials(PasswordCredentials, "portal")
    bundleFile = tasks.named('createBundle', Zip).map { it.archiveFile }.get()
}

tasks.register('cleanInternalRepo', Delete) {
    group = PublishingPlugin.PUBLISH_TASK_GROUP
    delete internalRepo
}

tasks.named('publishAllPublicationsToInternalRepository') {
    dependsOn tasks.named('cleanInternalRepo')
}

tasks.named('publish') {
    dependsOn tasks.named('uploadBundle')
}

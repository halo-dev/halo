package run.halo.app.infra.types;

import java.time.LocalDateTime;
import java.util.UUID;
import lombok.Data;

/**
 * ObjectMeta is metadata that all persisted resources must have, which includes all objects
 * users must create.
 *
 * @author guqing
 * @since 2.0.0
 */
@Data
public class ObjectMeta {

    /**
     * Name must be unique within a namespace. Is required when creating resources, although
     * some resources may allow a client to request the generation of an appropriate name
     * automatically. Name is primarily intended for creation idempotence and configuration
     * definition.
     * Cannot be updated.
     * Cannot be updated.
     * More info: <a href="http://kubernetes.io/docs/user-guide/identifiers#names">names</a>
     * +optional
     */
    String name;

    /**
     * GenerateName is an optional prefix, used by the server, to generate a unique
     * name ONLY IF the Name field has not been provided.
     * If this field is used, the name returned to the client will be different
     * than the name passed. This value will also be combined with a unique suffix.
     * The provided value has the same validation rules as the Name field,
     * and may be truncated by the length of the suffix required to make the value
     * unique on the server.
     * <p>
     * If this field is specified and the generated name exists, the server will return a 409.
     * <p>
     * Applied only if Name is not specified.
     * More info:
     * <a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency">idempotency</a>
     * +optional
     */
    String generateName;

    /**
     * UID is the unique in time and space value for this object. It is typically generated by
     * the server on successful creation of a resource and is not allowed to change on PUT
     * operations.
     * <p>
     * Populated by the system.
     * Read-only.
     * More info: <a href="http://kubernetes.io/docs/user-guide/identifiers#uids">uids</a>
     * +optional
     */
    UUID uid;

    /**
     * An opaque value that represents the internal version of this object that can
     * be used by clients to determine when objects have changed. May be used for optimistic
     * concurrency, change detection, and the watch operation on a resource or set of resources.
     * Clients must treat these values as opaque and passed unmodified back to the server.
     * They may only be valid for a particular resource or set of resources.
     * <p>
     * Populated by the system.
     * Read-only.
     * Value must be treated as opaque by clients and .
     * More info:
     * <a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency">concurrency-control-and-consistency</a>
     */
    String resourceVersion;

    /**
     * A sequence number representing a specific generation of the desired state.
     * Populated by the system. Read-only.
     * +optional
     */
    Long generation;

    /**
     * CreationTimestamp is a timestamp representing the server time when this object was
     * created. It is not guaranteed to be set in happens-before order across separate operations.
     * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
     * <p>
     * Populated by the system.
     * Read-only.
     * Null for lists.
     * More info:
     * <a href="https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata">metadata</a>
     * +optional
     */
    LocalDateTime creationTimestamp;
}

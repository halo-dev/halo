name: Halo CI

on:
  pull_request:
    branches:
      - main
      - release-*
    paths:
      - "**"
      - "!**.md"
  push:
    branches:
      - main
      - release-*
    paths:
      - "**"
      - "!**.md"
  release:
    types:
      - published

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Environment
        uses: ./.github/actions/setup-env
      - name: Check Halo console
        run: make -C console check
      - name: Check Halo core
        run: ./gradlew check
      - name: Analyze code
        if: ${{ github.event_name == 'push' && secrets.SONAR_TOKEN !== '' }} # Due to inability to access secrets during PR, only the code pushed into the branch can be analyzed.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --info
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Setup Environment
        uses: ./.github/actions/setup-env
      - name: Build Halo console
        run: make -C console build
      - name: Reset version of Halo
        if: github.event_name == 'release'
        shell: bash
        run: |
          # Set the version with tag name when releasing
          version=${{ github.event.release.tag_name }}
          version=${version#v}
          sed -i "s/version=.*-SNAPSHOT$/version=$version/1" gradle.properties
      - name: Build Halo core
        run: ./gradlew clean && ./gradlew downloadPluginPresets && ./gradlew build -x check
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: halo-artifacts
          path: application/build/libs
          retention-days: 1

  github-release:
    runs-on: ubuntu-latest
#    if: github.event_name == 'release'
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: halo-artifacts
          path: application/build/libs
      - name: Upload Artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: gh release upload ${{ github.event.release.tag_name }} application/build/libs/*
        run: gh release upload v1.5.1 application/build/libs/*
